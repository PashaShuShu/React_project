{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Content/Users/Users.module.css","components/Content/Profile/Info/Info.module.css","components/Header/Header.module.css","components/Content/Profile/MyPosts/MyPosts.module.css","components/Content/Profile/Profile.module.css","components/Content/Profile/MyPosts/Post/Post.module.css","hoc/withAuthRedirect.js","redux/dialog-reducer.js","components/Content/common/Preloader/Preloader.module.css","components/Content/Profile/MyPosts/Forms/MyPostForms.module.css","components/Header/Header.js","api/api.js","redux/auth-reduser.js","components/Header/HeaderContainer.js","components/Footer/Footer.js","components/Navbar/Navbar.js","components/Content/common/Preloader/Preloader.js","components/Content/Profile/Info/StatusButOnHooks.js","redux/profile-reducer.js","components/Content/Profile/Info/StatusContainer.js","img/ava2.gif","components/Content/Profile/Info/Info.js","components/Content/Profile/MyPosts/Post/Post.js","components/Content/common/FormsControls/FormsControls.js","components/Content/Profile/MyPosts/Forms/MyPostForm.js","components/Content/Profile/MyPosts/MyPosts.js","components/Content/Profile/MyPosts/MyPostsContainer.js","components/Content/Profile/Profile.js","components/Content/Profile/ProfileContainer.js","utils/objects-helper.js","redux/users-reducer.js","components/Content/Users/UserOnePage.js","components/Content/Users/Paginator.js","components/Content/Users/Users.js","redux/users-selectors.js","components/Content/Users/UsersContainer.js","utils/validators/validators.js","components/Login/LoginForm.js","components/Login/Login.js","components/Login/LoginContainer.js","redux/app-reduser.js","redux/sidebar-reducer.js","redux/redux-store.js","App.js","index.js"],"names":["module","exports","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","ADD_MESSAGE","UPDATE_NEW_MESSAGE_TEXT","initialState","newMessageText","dialogsData","id","name","img","messagesData","sentBy","message","addMessage","type","updateNewMessageText","text","newText","dialogReducer","action","length","Header","className","classes","logo__and__name","src","loginBlock","login","onClick","logoutUser","instance","axios","withCredentials","baseURL","headers","userAPI","currentPage","pageSize","get","then","response","data","userId","delete","post","profileAPI","put","status","photo","formData","FormData","append","loginAPI","password","rememberMe","captcha","email","SET_AUTH_USER_DATA","SET_USER_LOGDATA_ERROR","SET_CAPTCHA_URL","error","protection","captchaURL","setAuthUserData","payload","getAuthUserData","dispatch","a","resultCode","getCaptchaURL","url","authReduser","HeaderContainer","console","log","Footer","Nav","nav__menu","nav__item","activeClassName","active","Preloader","load","ProfileStatus","useState","editMode","setEditMode","setStatus","useEffect","onDoubleClick","placeholder","onChange","e","currentTarget","value","onMouseLeave","updateStatus","ADD_POST","UPDATE_NEW_POST_TEXT","SET_USER_PROFILE","SET_NEW_STATUS_TEXT","UPLOAD_PHOTO_SUCCESS","newPostText","profile","postsData","likes_count","setUserProfileSuccess","setNewStatsText","profileReducer","photos","StatusContainer","StatusButOnHooks","profilePage","Info","uplodPhoto","useRef","onMainPhotoChange","newAva","current","files","uploadPhoto","resp","alert","info","avatar","large","noPhoto","owner","ref","description","fullName","href","contacts","instagram","github","Post_item","item","like","readOnly","Textarea","input","MyPostForm","max","onSubmit","updatePostText","addPost","validate","errors","render","handleSubmit","meta","touched","MyPosts","postsItem","posts","map","el","Post","reverse","my__post","Profile","content__head","post__content","ProfileContainer","match","params","authUserId","history","push","getUserProfile","getStatus","refreshProfile","compose","small","messages","withRouter","updateObjectInArrey","items","itemId","objectPropName","newObjectProps","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_USERS_TOTAL_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","toggleIsFetching","toggleIsFollowingProgress","followUnfolowFlow","apiMethod","actionCreator","usersReducer","followed","count","filter","UserOnePage","unfollow","follow","user","friend","disabled","some","PageSpun","p","setCurrentPage","onPageChanged","selectedPage","page","Paginator","pages","Math","abs","pageRangeLimit","Users","friendsList","getUsers","usersPage","getPageSize","createSelector","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","pageNumber","requestUsersPages","pagesCount","ceil","i","totalCount","requiredField","LoginForm","loginUser","values","submitError","component","Login","LoginContainer","SET_INITIALIZED","initialized","appReduser","sidebarReducer","reducers","combineReducers","dialogsPage","sidebar","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","Example","lazy","DialogsContainer","App","initializeApp","path","Suspense","fallback","AppContainer","promise","Promise","all","MainApp","basename","process","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.6796d1f8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav__menu\":\"Navbar_nav__menu__rP-fd\",\"nav__item\":\"Navbar_nav__item__1hPzG\",\"active\":\"Navbar_active__Gp-NF\",\"top__friends\":\"Navbar_top__friends__2ocTC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend\":\"Users_friend__9XYzU\",\"selectedPage\":\"Users_selectedPage__10Veq\",\"page\":\"Users_page__LjuA4\",\"pages\":\"Users_pages__2Y0Ot\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"info\":\"Info_info__1jhmd\",\"avatar\":\"Info_avatar__1WQKu\",\"description\":\"Info_description__387a9\",\"uploadPhoto\":\"Info_uploadPhoto__1SIMI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo__and__name\":\"Header_logo__and__name__3bp2L\",\"name\":\"Header_name__2tzP3\",\"loginBlock\":\"Header_loginBlock__2P38k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"my__post\":\"MyPosts_my__post__EswJY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content__head\":\"Profile_content__head__qXFYQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3-ZdD\",\"like\":\"Post_like__2FxAS\"};","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth,\n})\n\nexport const withAuthRedirect = (Component) => {\n    \n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to='/login' />\n            return <Component {...this.props} />\n        }\n    }\n\n\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect, {})(RedirectComponent)\n\n    return ConnectedAuthRedirectComponent;\n}","const ADD_MESSAGE = 'ADD-MESSAGE'\nconst UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-TEXT';\n\nlet initialState = {\n  newMessageText: \"\",\n  dialogsData: [\n    { id: 1, name: \"Vika\", img: \"https://media.gq.com/photos/55828922e52bc4b477a9714f/master/pass/blogs-the-feed-dick-pic-tumblr-635.jpg\" },\n    { id: 2, name: \"Alex\", img: \"https://i1.sndcdn.com/artworks-000240511894-n0z5cp-t500x500.jpg\" },\n    { id: 3, name: \"Dmitry\", img: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTPTTZe_3l6aDKO88sHV9kA7xxrs5zHYronCxAaDE0PWF5ruKKtBrBkIm-HC7Q_nruuBEE&usqp=CAU\" },\n  ],\n  messagesData: [\n    { id: 1, sentBy: \"r\", message: \"Hollo\" },\n    { id: 2, sentBy: \"l\", message: \"Hallo\" },\n    { id: 3, sentBy: \"l\", message: \"How are you\" },\n    { id: 4, sentBy: \"l\", message: \"Not bad\" },\n    { id: 5, sentBy: \"r\", message: \"Me too\" },\n    { id: 6, sentBy: \"l\", message: \"I have not asked you\" },\n    { id: 7, sentBy: \"l\", message: \"suka\" },\n    { id: 8, sentBy: \"r\", message: \"suka\" },\n    { id: 9, sentBy: \"l\", message: \"Dblia blia bliaima\" },\n    { id: 10, sentBy: \"r\", message: \"you are chiort\" }\n  ]\n}\nconst dialogReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_MESSAGE: {\n      return ({\n        ...state,\n        newMessageText: '',\n        messagesData: [...state.messagesData, {\n          id: state.messagesData.length + 1,\n          sentBy: \"r\",\n          message: state.newMessageText\n        }]\n      });\n    }\n    case UPDATE_NEW_MESSAGE_TEXT:\n      return ({\n        ...state,\n        newMessageText: action.newText\n      })\n    default:\n      return state;\n  }\n}\n\nexport const addMessage = () => ({ type: ADD_MESSAGE })\nexport const updateNewMessageText = (text) =>\n  ({ type: UPDATE_NEW_MESSAGE_TEXT, newText: text })\n\nexport default dialogReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"load\":\"Preloader_load__-0d9G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"MyPostForms_error__1Lagx\"};","import { NavLink } from 'react-router-dom';\nimport classes from './Header.module.css';\nconst Header = (props) => {\n  return (\n    <header>\n      <div className={classes.logo__and__name}>\n        <img src=\"https://img2.freepng.ru/20180518/jjg/kisspng-moroccan-cuisine-logo-sahara-restaurant-middle-eas-5aff5f15226751.5303971415266854611409.jpg\"></img>\n        <span className={classes.name}>SHARA.NET</span>\n        <NavLink to=\"/hooks\">Hooks</NavLink>\n      </div>\n      <div className={classes.loginBlock}>\n        {props.isAuth ?\n          <div>\n            {props.login}\n            <div>\n              <button onClick={props.logoutUser}>Logout</button>\n            </div>\n          </div>\n          :\n          <NavLink to='/login'>Login</NavLink>\n        }\n\n      </div>\n    </header>\n  );\n}\n\nexport default Header;","import * as axios from 'axios';\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    headers: {\n        \"API-KEY\": '9eb30f89-e9e4-4d8e-ace2-9693fb3d61df'\n    }\n})\n\nexport const userAPI = {\n    getUsers(currentPage, pageSize) {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => { return response.data });\n    },\n\n    unfollow(userId) {\n        return instance.delete(`follow/${userId}`).then(response => { return response.data })\n    },\n    follow(userId) {\n        return instance.post(`follow/${userId}`).then(response => { return response.data })\n    },\n    authMe() {\n        return instance.get(`auth/me`).then(response => { return response.data })\n    },\n}\n\nexport const profileAPI = {\n    getUserProfile(userId) {\n        return instance.get(`profile/${userId}`).then(response => { return response.data })\n    },\n    getUserStatus(userId) {\n        return instance.get('profile/status/' + userId);\n    },\n    putUserStatus(text) {\n        return instance.put(`profile/status`, { status: text });\n    },\n    putPhoto(photo) {\n        var formData = new FormData();\n        formData.append(\"image\", photo);\n        return instance.put(`profile/photo`,formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        });\n    }\n}\n\nexport const loginAPI = {\n    loginUser(login, password, rememberMe, captcha) {\n        if (captcha !== \"\") {\n            return instance.post(`auth/login`,\n                {\n                    email: login,\n                    password: password,\n                    rememberMe: rememberMe,\n                    captcha: captcha\n                }\n            );\n        }\n        return instance.post(`auth/login`,\n            {\n                email: login,\n                password: password,\n                rememberMe: rememberMe,\n            }\n        );\n    },\n    logoutUser() {\n        return instance.delete('auth/login');\n    },\n    getCaptcha() {\n        return instance.get('security/get-captcha-url');\n    },\n}","import { userAPI, loginAPI } from './../api/api';\n\nconst SET_AUTH_USER_DATA = 'SET-AUTH-USET-DATA';\nconst SET_USER_LOGDATA_ERROR = 'SET-USER-LOGDATA-ERROR';\nconst SET_CAPTCHA_URL = 'SET-USER-CAPTCHA-URL';\n\n\nlet initialState = {\n    userId: null,\n    email: null,\n    login: null,\n    isAuth: false,\n    error: null,\n    protection: {\n        captchaURL: \"\",\n\n    }\n}\n\n\nconst authReduser = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_AUTH_USER_DATA:\n            return {\n                ...state,\n                ...action.payload,\n                error: null,\n                captcha: \"\",\n            }\n        case SET_USER_LOGDATA_ERROR:\n            return {\n                ...state,\n                error: action.error,\n                captcha: \"\",\n            }\n        case SET_CAPTCHA_URL:\n            return {\n                ...state,\n                protection: {\n                    ...state.protection,\n                    captchaURL: action.url\n                }\n            }\n        default:\n            return state;\n    }\n}\n\n\nexport const setAuthUserData = (userId, email, login, isAuth) => ({ type: SET_AUTH_USER_DATA, payload: { userId, email, login, isAuth } });\nexport const setUserLogdataError = (text) => ({ type: SET_USER_LOGDATA_ERROR, error: text })\nexport const setCaptchaURL = (url) => ({ type: SET_CAPTCHA_URL, url });\n\n\nexport const getAuthUserData = () => async dispatch => {\n    let response = await userAPI.authMe();\n\n    if (response.resultCode === 0) {\n        let { id, email, login } = response.data;\n        dispatch(setAuthUserData(id, email, login, true));\n    }\n\n}\n\nexport const loginUser = (login, password, rememberMe, captcha) => async dispatch => {\n    let response = await loginAPI.loginUser(login, password, rememberMe, captcha)\n\n    if (response.data.resultCode === 0) {\n        console.log(\"success\");\n        dispatch(getAuthUserData());\n    } else if (response.data.resultCode === 10) {\n        dispatch(getCaptchaURL());\n    } else {\n        let message = response.data.messages.length > 0 ?\n            response.data.messages[0]\n            :\n            \"some error\";\n        dispatch(setUserLogdataError(message))\n    }\n\n\n}\nexport const logoutUser = () => async dispatch => {\n    let response = await loginAPI.logoutUser()\n\n    if (response.data.resultCode === 0) {\n        console.log(\"EXIT\")\n        dispatch(setAuthUserData(null, null, null, false))\n    }\n\n}\nexport const getCaptchaURL = () => async dispatch => {\n    let response = await loginAPI.getCaptcha()\n    \n    let captcha = response.data.url;\n    dispatch(setCaptchaURL(captcha));\n\n}\n\nexport default authReduser;","import Header from \"./Header\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport { setAuthUserData, logoutUser } from '../../redux/auth-reduser';\n\n\nclass HeaderContainer extends React.Component{\n\n    render(){\n        return(\n            <Header {...this.props}/>\n        )\n    }\n}\n\nconst mapStateToProps = (state)=>({\n    isAuth: state.auth.isAuth,\n    login: state.auth.login,\n})\n\nexport default connect(mapStateToProps,{\n    logoutUser\n})(HeaderContainer);","import classes from './Footer.module.css';\nconst Footer = ()=>{\n  return(\n      <footer>\n        All rights are defended fuck you\n      </footer>\n  );\n}\n\nexport default Footer;","import classes from './Navbar.module.css';\nimport { NavLink } from 'react-router-dom';\n\nconst Nav = (props) => {\n    \n\n    return (\n        <nav>\n            <div className={classes.nav__menu}>\n                <div className={classes.nav__item}>\n                    <NavLink to=\"/profile\" activeClassName={classes.active}>Profile</NavLink>\n                </div>\n                <div className={classes.nav__item}>\n                    <NavLink to=\"/dialogs\" activeClassName={classes.active}>Messages</NavLink>\n                </div>\n                <div className={classes.nav__item}>\n                    <NavLink to=\"/news\" activeClassName={classes.active}>News</NavLink>\n                </div>\n                <div className={classes.nav__item}>\n                    <NavLink to=\"/music\" activeClassName={classes.active}>Music</NavLink>\n                </div><br></br>\n                <div className={classes.nav__item}>\n                    <NavLink to=\"/users\" activeClassName={classes.active}>Users</NavLink>\n                </div><br></br>\n                <div className={classes.nav__item}>\n                    <NavLink to=\"/settings\" activeClassName={classes.active}>Settings</NavLink>\n                </div>\n                \n            </div>\n    \n        </nav>\n    );\n}\n\nexport default Nav;","import classes from './Preloader.module.css';\nimport React from 'react';\n\nconst Preloader = (props) => {\n    return <img\n        className={classes.load}\n        src=\"https://orig04.deviantart.net/4590/f/2017/119/c/e/grooving_cactus__green__by_funymony-db7le16.gif\"\n    ></img>\n}\n\nexport default Preloader","import React, { useState, useEffect } from 'react';\n\n\n\n\nconst ProfileStatus = (props) => {\n\n    const [editMode, setEditMode] = useState(true);\n    const [status, setStatus] = useState(props.status);\n\n    useEffect(() =>{ \n        setStatus(props.status)\n\n    }, [props.status] )\n\n    const activateEditMode = () => {\n        setEditMode(false);\n    }\n    const deactivateEditMode = () => {\n        setEditMode(true);\n        props.updateStatus(status);\n    }\n\n    const onChangeStatusText = (e) => {\n        let text = e.currentTarget.value;\n        setStatus(text);\n    }\n\n    return (\n        <>\n            <div>\n                {editMode ?\n                    <div>\n                        <span onDoubleClick={activateEditMode}>\n                            {props.status || \"I dont have status\"\n                            }\n                        </span>\n                    </div>\n                    :\n                    <div>\n                        <input\n                            placeholder=\"мой статус\"\n                            onChange={onChangeStatusText}\n                            onMouseLeave={deactivateEditMode}\n                            value={status}>\n\n                        </input>\n                    </div>\n                }\n            </div>\n        </>\n    )\n}\n\nexport default ProfileStatus;","import { profileAPI } from '../api/api';\n\nconst ADD_POST = 'ADD-POST';\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\nconst SET_USER_PROFILE = 'SET-USER-PROFILE';\nconst SET_NEW_STATUS_TEXT = 'SET-NEW-STATUS-TEXT';\nconst UPLOAD_PHOTO_SUCCESS = 'UPLOAD-PHOTO-SUCCESS';\n\nlet initialState = {\n    newPostText: '',\n    profile: null,\n    status: \"\",\n    postsData: [\n        { id: 1, name: \"Pasha\", message: \"boo boo bi bi\", likes_count: 122 },\n        { id: 2, name: \"Pasha\", message: \"ifro frau\", likes_count: 233 },\n        { id: 3, name: \"Pasha\", message: \"isgold de fag\", likes_count: 223 },\n        { id: 4, name: \"Pasha\", message: \"de fag\", likes_count: 2223 }\n    ]\n}\n\nconst profileReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_POST: {\n            return ({\n                ...state,\n                newPostText: \"\",\n                postsData: [...state.postsData, {\n                    id: (state.postsData.length + 1),\n                    name: \"Pasha\",\n                    message: state.newPostText,\n                    likes_count: 0\n                }]\n            });\n        }\n        case UPDATE_NEW_POST_TEXT: {\n            return ({\n                ...state,\n                newPostText: action.newText\n            });\n        }\n        case SET_USER_PROFILE:\n            return {\n                ...state,\n                profile: action.profile,\n            }\n        case SET_NEW_STATUS_TEXT:\n            return {\n                ...state,\n                status: action.text\n            }\n        case UPLOAD_PHOTO_SUCCESS:\n            return{\n                ...state,\n                profile: {...state.profile, photos: action.photo}\n            }\n        default:\n            return state;\n    }\n}\n\nexport const addPost = () => ({ type: ADD_POST })\nexport const updatePostText = (text) => ({ type: UPDATE_NEW_POST_TEXT, newText: text })\nexport const setUserProfileSuccess = (profile) => ({ type: SET_USER_PROFILE, profile })\nexport const setNewStatsText = (text) => ({ type: SET_NEW_STATUS_TEXT, text })\nexport const uploadPhotoSuccess = (photo) => ({type: UPLOAD_PHOTO_SUCCESS, photo})\n\n\nexport const getUserProfile = (userId = 2) => {\n    return ((dispatch) => {\n\n        profileAPI.getUserProfile(userId).then(data => {\n            dispatch(setUserProfileSuccess(data))\n        });\n\n    })\n}\n\nexport const getStatus = (userId) => (dispatch) => {\n    profileAPI.getUserStatus(userId)\n        .then(response => {\n            dispatch(setNewStatsText(response.data))\n        })\n}\n\nexport const updateStatus = (text) => (dispatch) => {\n    profileAPI.putUserStatus(text)\n        .then(response => {\n            if (response.data.resultCode === 0) {\n                dispatch(setNewStatsText(text))\n            }\n        })\n}\n\nexport const uploadPhoto = (photo) => async dispatch => {\n    let response = await profileAPI.putPhoto(photo)\n    if (response.data.resultCode === 0) {\n        dispatch(setNewStatsText(response.data.data.photos.small))\n        return(\"succsess\")\n    }\n    return(response.data.messages[0]);\n}\n\nexport default profileReducer;","import { connect } from 'react-redux';\nimport React from 'react'\nimport StatusButOnHooks from './StatusButOnHooks';\nimport { updateStatus } from './../../../../redux/profile-reducer';\n\nclass StatusContainer extends React.Component {\n    render() {\n        return (\n            <div>\n                <StatusButOnHooks {...this.props} />\n            </div>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => ({\n    status: state.profilePage.status,\n})\n\nexport default connect(mapStateToProps, {\n    updateStatus,\n})(StatusContainer)","export default __webpack_public_path__ + \"static/media/ava2.5eacbf8a.gif\";","import classes from './Info.module.css';\nimport Preloader from './../../common/Preloader/Preloader';\nimport StatusContainer from './StatusContainer';\nimport React from 'react'\nimport noPhoto from '../../../../img/ava2.gif'\n\nconst Info = (props) => {\n    let uplodPhoto = React.useRef()\n\n    if (!props.profile) {\n        return <Preloader />\n    }\n    \n    const onMainPhotoChange = async (e) => {\n        \n        let newAva = uplodPhoto.current.files;\n        if (newAva.length) {\n            let resp = await props.uploadPhoto(newAva[0]);\n            alert(resp);\n        } else alert(\"how about new avatar?\")\n    }\n\n    return (\n        <div className={classes.info}>\n            <div className={classes.avatar}>\n                <img src={(props.profile.photos.large) ? props.profile.photos.large : noPhoto}></img>\n                <div>\n                    {props.owner ?\n                        <div>\n                            <input\n                                ref={uplodPhoto}\n                                type={\"file\"}\n                            />\n                              <div\n                                onClick={onMainPhotoChange}\n                                className={classes.uploadPhoto}>\n                                изменить фото\n                            </div>\n                        </div>\n                        :\n                        null\n                    }\n                </div>\n            </div>\n            <div className={classes.description}>\n                {props.profile.fullName}\n                <div>\n                    <h3>About me</h3>\n                    <StatusContainer status={props.status} />\n                </div>\n                <div>\n                    <h3>instagram: <a href={props.profile.contacts.instagram}>чекай мой инст</a></h3>\n                    <h3>git: <a href={props.profile.contacts.github}>чекай мой гит</a></h3>\n                </div>\n            </div>\n\n        </div>\n    );\n}\nexport default Info;","import classes from \"./Post.module.css\"\n\nconst Post_item = (props)=>{\n    return(\n        <div className=\"Post\">\n            <div className={classes.item}>\n                <img src=\"https://cs9.pikabu.ru/post_img/big/2018/10/22/10/1540228059127699409.jpg\"></img><br/>\n                <div>\n                    {props.name}\n                </div>\n                <div>\n                    {props.message}\n                </div>\n                <div className={classes.like}>\n                    <span>\n                        <img src=\"https://pngicon.ru/file/uploads/like.png\"></img>\n                    </span> \n                    <input id=\"like\" type='number' value={props.likes_count} readOnly></input>\n                </div>            \n            </div>\n        </div>\n    );\n} \n\nexport default Post_item;","export const Textarea = ({ input, ...props }) => {\n    return (\n        <div>\n            <textarea {...input} {...props} placeholder={props.placeholder} />\n        </div>\n    )\n}\n","import classes from './MyPostForms.module.css'\nimport { Form, Field } from 'react-final-form'\nimport { Textarea } from '../../../common/FormsControls/FormsControls';\n\nconst MyPostForm = (props) => {\n    const validate = (max) => (e) => {\n        const errors = {}\n        if (!e.post) {\n            errors.post = \"Do you want to make a post?\";\n        } else if (e.post.length > max) {\n            errors.post = \"to long\";\n        }\n        return errors;\n    }\n    \n    const onSubmit = (e) => {\n        props.updatePostText(e.post)\n        props.addPost();\n    }\n\n    return (\n        <Form\n            onSubmit={onSubmit}\n            validate={validate(100)}\n            \n            render={({ handleSubmit }) => (\n                <form onSubmit={handleSubmit}>\n                    <lable>Make a post</lable>\n                    <Field name=\"post\">\n                        {({ input, meta }) => (\n                            <div>\n                                <Textarea {...input} placeholder=\"some post text\" />\n                                {meta.touched && meta.error &&\n                                    <span className={classes.error}>{meta.error}</span>\n                                }\n                            </div>\n                        )}\n                    </Field>\n                    <button type=\"submit\">Post</button>\n                </form>\n            )}\n        />\n    )\n}\n\nexport default MyPostForm;","import classes from \"./MyPosts.module.css\"\nimport Post_item from './Post/Post'\nimport React from 'react'\nimport MyPostForm from './Forms/MyPostForm'\n\nconst MyPosts = (props) => {\n    \n    let postsItem = props.posts.map(el => {\n        return <Post_item name={el.name} key={el.id} message={el.message} likes_count={el.likes_count} />\n    })\n    postsItem.reverse();\n\n    return (\n        <div className=\"Post\">\n            <div className={classes.post}>\n                <div className={classes.my__post}>\n                    <MyPostForm addPost={props.addPost} updatePostText={props.updatePostText} />\n                </div>\n                <div className={classes.posts}>\n                    {postsItem}\n                </div>\n            </div>\n        </div>\n    );\n}\n\n\n\nexport default MyPosts;","import { addPost, updatePostText } from '../../../../redux/profile-reducer'\nimport MyPosts from './MyPosts'\nimport { connect } from 'react-redux'\nimport React, { useEffect } from 'react'\n\nconst MyPostsContainer = (props) => {\n    console.log(\"rerender\")\n    return (\n        <MyPosts {...props} />\n    )\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.postsData,\n        newPostText: state.profilePage.newPostText\n    }\n};\n\nexport default connect(mapStateToProps, {\n    updatePostText,\n    addPost\n})(MyPostsContainer);","import classes from './Profile.module.css';\nimport Info from './Info/Info'\nimport MyPostContainer from './MyPosts/MyPostsContainer';\n\nconst Profile = (props) => {\n    return (\n        <div className=\"Content\">\n            <div className={classes.content__head}>\n                <img src=\"https://i.gifer.com/1Zla.gif\"></img>\n            </div>\n            <div className={classes.post__content}>\n                <Info\n                    uploadPhoto={props.uploadPhoto}\n                    owner={props.owner}\n                    profile={props.profile}\n                    status={props.status}\n                    updateStatus={props.updateStatus} />\n                <h3>My posts</h3>\n                <MyPostContainer />\n            </div>\n        </div>\n    );\n}\n\nexport default Profile;","import Profile from './Profile';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { getUserProfile, getStatus, updateStatus, uploadPhoto } from './../../../redux/profile-reducer';\nimport { withRouter } from 'react-router-dom';\nimport { withAuthRedirect } from './../../../hoc/withAuthRedirect';\nimport { compose } from 'redux';\n\nclass ProfileContainer extends React.Component {\n    refreshProfile() {\n        let userId = this.props.match.params.userId;\n\n        if (!userId) {\n\n            userId = this.props.authUserId;\n\n            if (!userId) this.props.history.push(\"/login\");\n\n        }\n\n        this.props.getUserProfile(userId);\n        this.props.getStatus(userId)\n    }\n\n    componentDidMount() {\n        this.refreshProfile();\n    }\n    componentDidUpdate() {\n        this.refreshProfile();\n    }\n\n    render() {\n\n        return (\n            <Profile\n                owner={!this.props.match.userId}\n                uploadPhoto={this.props.uploadPhoto}\n                {...this.props}\n                status={this.props.status} />\n        );\n    }\n}\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    authUserId: state.auth.userId,\n    status: state.profilePage.status\n})\n\nexport default compose(\n    connect(mapStateToProps, {\n        getUserProfile,\n        getStatus,\n        updateStatus,\n        uploadPhoto,\n    }),\n    withRouter,\n    withAuthRedirect,\n)(ProfileContainer)","export const updateObjectInArrey = (items, itemId, objectPropName, newObjectProps) => {\r\n    return items.map(u => {\r\n        if (u[objectPropName] === itemId) {\r\n            return { ...u, ...newObjectProps };\r\n        }\r\n        return u\r\n    })\r\n}","import { userAPI } from './../api/api';\nimport { updateObjectInArrey } from '../utils/objects-helper';\n\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET-USERS';\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\nconst SET_USERS_TOTAL_COUNT = 'SETUSER-TOTAL-COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE-IS-FOLLOWING-PROGRESS';\n\nlet initialState = {\n    users: [],\n    pageSize: 10,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: true,\n    followingInProgress: [],\n}\n\nconst usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users: updateObjectInArrey(state.users, action.userId, 'id', { followed: true })\n                /* users: state.users.map(u => {\n                    if (u.id === action.userId) {\n                        return { ...u, followed: true };\n                    }\n                    return u\n                }) */\n            }\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: updateObjectInArrey(state.users, action.userId, 'id', { followed: false })\n            }\n        case SET_USERS:\n            return {\n                ...state,\n                users: [...action.users]\n            }\n        case SET_CURRENT_PAGE:\n            return {\n                ...state,\n                currentPage: action.currentPage\n            }\n        case SET_USERS_TOTAL_COUNT:\n            return {\n                ...state,\n                totalUsersCount: action.count\n            }\n        case TOGGLE_IS_FETCHING:\n            return {\n                ...state,\n                isFetching: action.isFetching\n            }\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\n            return {\n                ...state,\n                followingInProgress: action.isFetching\n                    ? [...state.followingInProgress, action.userId]\n                    : state.followingInProgress.filter(id => id !== action.userId)\n            }\n        default: return state;\n    }\n}\n\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId });\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId });\nexport const setUsers = (users) => ({ type: SET_USERS, users });\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage });\nexport const setUsersTotalCount = (count) => ({ type: SET_USERS_TOTAL_COUNT, count });\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching });\nexport const toggleIsFollowingProgress = (isFetching, userId) => ({ type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId })\n\nconst followUnfolowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\n    dispatch(toggleIsFollowingProgress(true, userId));\n\n    let data = await apiMethod(userId)\n\n    if (data.resultCode === 0) {\n        dispatch(actionCreator(userId));\n    }\n    dispatch(toggleIsFollowingProgress(false, userId));\n}\n\nexport const requestUsersPages = (currentPage, pageSize) => async dispatch => {\n\n    dispatch(toggleIsFetching(true));\n\n    let data = await userAPI.getUsers(currentPage, pageSize);\n\n    dispatch(toggleIsFetching(false));\n    dispatch(setUsers(data.items));\n    dispatch(setUsersTotalCount(data.totalCount));\n\n}\n\nexport const unfollow = (userId) => async dispatch => {\n    followUnfolowFlow(dispatch, userId, userAPI.unfollow, unfollowSuccess)\n}\n\n\nexport const follow = (userId) => async dispatch => {\n    followUnfolowFlow(dispatch, userId, userAPI.follow, followSuccess)\n}\n\n\nexport default usersReducer;","import classes from './Users.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport noPhoto from '../../../img/ava2.gif'\r\n\r\nconst UserOnePage = ({users, followingInProgress, unfollow, follow}) => {\r\n    return (<>\r\n        {\r\n            users.map((user) => {\r\n                return (\r\n                    <div key={user.id} className={classes.friend}>\r\n                        <NavLink to={\"/profile/\" + user.id}><img src={\r\n                            user.photos.small != null ? user.photos.small : noPhoto}></img>\r\n                        </NavLink>\r\n                        <div>{user.name}</div>\r\n                        <div>{user.status}</div>\r\n                        {(user.followed)\r\n                            ? <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n\r\n                                unfollow(user.id);\r\n\r\n                            }}>unfollow</button>\r\n                            : <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n\r\n                                follow(user.id);\r\n\r\n                            }}>follow</button>}\r\n                    </div>)\r\n            })\r\n        }\r\n    </>);\r\n}\r\nexport default UserOnePage;","import React from 'react';\nimport classes from './Users.module.css';\n\nconst PageSpun = ({ currentPage, p, setCurrentPage, onPageChanged }) => {\n    return (\n        <span\n            className={\n                currentPage === p ? classes.selectedPage : classes.page\n            }\n            onClick={\n                currentPage !== p ?\n                    () => {\n                        setCurrentPage(p)\n                        onPageChanged(p)\n                    } \n                    :\n                    null\n            }\n        > {p} </span>\n    )\n}\n\nconst Paginator = (props) => {\n\n    const pageRangeLimit = 5;\n    return (\n        <div className={classes.pages}>\n            <div>\n                {props.pages.map(p => {\n                    if (p === 1 || Math.abs(props.currentPage - p) < pageRangeLimit || p === props.pages.length) {\n                        return (\n                            <PageSpun p={p}\n                                currentPage={props.currentPage}\n                                setCurrentPage={props.setCurrentPage}\n                                onPageChanged={props.onPageChanged} />\n                        )\n                    } else if (Math.abs(props.currentPage - p) < pageRangeLimit+1) {\n                        return '...'\n                    }\n\n                }\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default Paginator;","import React from 'react';\nimport classes from './Users.module.css';\nimport UserOnePage from './UserOnePage';\nimport Paginator from './Paginator';\n\nlet Users = (props) => {\n    return (\n        <div className={classes.friendsList}>\n            <UserOnePage\n                users={props.users}\n                followingInProgress={props.followingInProgress}\n                unfollow={props.unfollow}\n                follow={props.follow}\n            />\n            <Paginator\n                setCurrentPage={props.setCurrentPage}\n                currentPage={props.currentPage}\n                onPageChanged={props.onPageChanged}\n                pages={props.pages} />\n\n        </div>\n    );\n}\n\nexport default Users;","import { createSelector } from 'reselect'\r\n\r\nexport const getUsers = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsersSuperSelector = createSelector(getUsers, (users) => {\r\n    return users.filter(user => true);\r\n})\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}\r\n","import { connect } from 'react-redux';\nimport { follow, unfollow, requestUsersPages, setCurrentPage } from \"../../../redux/users-reducer\";\nimport Users from './Users';\nimport React from 'react';\nimport Preloader from './../common/Preloader/Preloader';\nimport {getUsersSuperSelector, getUsers, getPageSize, getTotalUsersCount, getCurrentPage, getIsFetching, getFollowingInProgress } from \"../../../redux/users-selectors\"\n\nclass UsersContainer extends React.Component {\n\n    componentDidMount() {\n        this.props.requestUsersPages(this.props.currentPage, this.props.pageSize);\n    }\n\n    onPageChanged = (pageNumber) => {\n        this.props.requestUsersPages(pageNumber, this.props.pageSize);\n    }\n\n    render() {\n\n        let pagesCount = Math.ceil(this.props.totalUsersCount / this.props.pageSize);\n\n        let pages = [];\n\n        for (let i = 1; i <= pagesCount; i++) {\n            pages.push(i)\n        }\n\n        return <>\n            {this.props.isFetching\n                ? <Preloader />\n                : <Users\n                    pages={pages}\n                    pageSize={this.props.pageSize}\n                    totalUsersCount={this.props.totalUsersCount}\n                    users={this.props.users}\n                    unfollow={this.props.unfollow}\n                    follow={this.props.follow}\n                    onPageChanged={this.onPageChanged}\n                    followingInProgress={this.props.followingInProgress}\n                    toggleIsFollowingProgress={this.props.toggleIsFollowingProgress}\n                    currentPage={this.props.currentPage}\n                    setCurrentPage={this.props.setCurrentPage}\n                />}\n\n        </>\n    }\n}\n\n\nlet mapStateToProps = (state) => {\n    return {\n        users: getUsers(state),\n        pageSize: getPageSize(state),\n        totalUsersCount: getTotalUsersCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getIsFetching(state),\n        followingInProgress: getFollowingInProgress(state),\n    }\n}\n\nexport default connect(mapStateToProps, {\n    follow,\n    unfollow,\n    setCurrentPage, \n    requestUsersPages\n})(UsersContainer);\n","export const requiredField = value => {\n    const errors = {}\n\n    if (!value.login) {\n        errors.login = \"how about login?\";\n    }\n    if (!value.password) {\n        errors.password = \"how about password?\";\n    }\n\n    return errors;\n}\n","import { Form, Field } from \"react-final-form\"\nimport { requiredField } from './../../utils/validators/validators';\n\n\nconst LoginForm = ({ loginUser, error, captchaURL }) => {\n    const onSubmit = async values => {\n        loginUser(values.login, values.password, values.rememberMe, values.captcha)\n        if (error) {\n            return { login: error }\n        }\n    }\n    return (\n        <Form\n            onSubmit={onSubmit}\n            validate={requiredField}\n            render={({ handleSubmit }) => (\n                <form onSubmit={handleSubmit}>\n\n                    <Field name=\"login\">\n                        {({ input, meta }) => (\n                            <div>\n                                <input {...input} type=\"text\" placeholder=\"login\" />\n                                {(meta.error || meta.submitError) && meta.touched && <span>{meta.error || meta.submitError}</span>}\n                            </div>\n                        )}\n                    </Field>\n\n                    <Field name=\"password\">\n                        {({ input, meta }) => (\n                            <div>\n                                <input {...input} type=\"password\" placeholder=\"Password\" />\n                                {meta.error && meta.touched && <span>{meta.error}</span>}\n                            </div>\n                        )}\n                    </Field>\n                    {captchaURL ?\n                        <div>\n                            <img src={captchaURL}></img>\n                            <div>\n                                <Field name=\"captcha\" type=\"text\" component=\"input\" />\n                            </div>\n                        </div>\n                        : null\n                    }\n                    <div>\n                        <Field name=\"rememberMe\" component=\"input\" type=\"checkbox\" />\n                        <supn>remember me</supn>\n                    </div>\n                    <button type=\"submit\"> log in </button>\n                </form>\n            )\n            } />\n    )\n}\n\nexport default LoginForm;","import LoginForm from \"./LoginForm\";\nimport { Redirect } from 'react-router-dom';\n\nconst Login = (props) => {\n    if (props.isAuth) {\n        return <Redirect to={\"/profile\"} />\n    }\n\n    return (\n        <div>\n            <h1>Login</h1>\n            <LoginForm\n                captchaURL={props.captchaURL}\n                error={props.error}\n                loginUser={props.loginUser}\n            />\n        </div>\n    )\n}\n\nexport default Login;","import React from \"react\";\nimport { loginUser,} from \"../../redux/auth-reduser\";\nimport { connect } from \"react-redux\";\nimport Login from './Login';\n\nclass LoginContainer extends React.Component {\n    render() {\n        return (\n            <>\n                <Login\n                    captchaURL={this.props.captchaURL}\n                    error={this.props.error}\n                    isAuth={this.props.isAuth}\n                    loginUser={this.props.loginUser} />\n            </>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        isAuth: state.auth.isAuth,\n        error: state.auth.error,\n        captchaURL: state.auth.protection.captchaURL,\n    }\n};\n\nexport default connect(mapStateToProps, {\n    loginUser,\n   \n})(LoginContainer);","import { getAuthUserData } from './auth-reduser'\r\n\r\nconst SET_INITIALIZED = 'SET_INITIALIZED';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nlet appReduser = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_INITIALIZED:\r\n            \r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default: return { ...state }\r\n    }\r\n};\r\n\r\nexport const setInitializedSuccess = () => ({ type: SET_INITIALIZED })\r\n\r\nexport const initializeApp = () => dispatch => {\r\n    let promise = dispatch(getAuthUserData())\r\n    Promise.all([promise]).then(() => {\r\n        \r\n        dispatch(setInitializedSuccess())\r\n    });\r\n\r\n}\r\n\r\nexport default appReduser;","let initialState = {\n\n}\n\n\nconst sidebarReducer = (state = initialState, action) => {\n    switch (action.type){\n        default:\n            return state;\n    }\n}\n\nexport default sidebarReducer","\nimport { applyMiddleware, compose, combineReducers, createStore } from \"redux\";\nimport authReduser from \"./auth-reduser\";\nimport dialogReducer from './dialog-reducer';\nimport profileReducer from './profile-reducer';\nimport sidebarReducer from './sidebar-reducer';\nimport usersReducer from './users-reducer';\nimport thunkMiddleware from 'redux-thunk';\nimport appReduser from './app-reduser';\n\n\nlet reducers = combineReducers({\n    profilePage: profileReducer,\n    dialogsPage: dialogReducer,\n    sidebar: sidebarReducer,\n    usersPage: usersReducer,\n    auth: authReduser,\n    app: appReduser,\n\n})\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\n\n\nexport default store;","import './App.css';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Footer from './components/Footer/Footer';\nimport Nav from './components/Navbar/Navbar';\nimport ProfileContainer from './components/Content/Profile/ProfileContainer';\nimport UsersContainer from './components/Content/Users/UsersContainer';\nimport { Route, withRouter, BrowserRouter, HashRouter } from 'react-router-dom';\nimport LoginContainer from './components/Login/LoginContainer';\nimport { connect, Provider } from 'react-redux';\nimport React from 'react';\nimport { compose } from 'redux';\nimport { initializeApp } from './redux/app-reduser';\nimport Preloader from './components/Content/common/Preloader/Preloader';\nimport store from './redux/redux-store';\n\n//! laz components\nconst Example = React.lazy(() => import('./components/Content/Hooks/Example'));\nconst DialogsContainer = React.lazy(() => import('./components/Content/Dialogs/DialogsContainer'));\n\n\nclass App extends React.Component {\n  componentDidMount() {\n\n    this.props.initializeApp();\n\n  }\n\n  render() {\n\n    if (!this.props.initialized) {\n      return <Preloader />\n    }\n    return (\n      <div className=\"app__wrapper\">\n        <div className=\"app__wrapper__header\">\n          <HeaderContainer />\n        </div>\n        <div className=\"app__wrapper__nav\">\n          <Nav />\n        </div>\n        <div className=\"app__wrapper__content\">\n          <Route path='/profile/:userId?' render={() => <ProfileContainer />} />\n          <Route path='/dialogs' render={() => {\n            return (\n              <React.Suspense fallback={<div>Loading...</div>}>\n                <DialogsContainer />\n              </React.Suspense>\n            )\n          }} />\n          <Route path='/users' render={() => <UsersContainer />} />\n          <Route path='/login' render={() => <LoginContainer />} />\n          <Route path='/hooks' render={() => {\n            return (\n              <React.Suspense fallback={<div>Loading...</div>}>\n                <Example />\n              </React.Suspense>\n            )\n          }} />\n        </div>\n        <div className=\"app__wrapper__footer\">\n          <Footer />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    initialized: state.app.initialized\n  }\n}\n\n\nlet AppContainer = compose(\n  withRouter,\n  connect(mapStateToProps, { initializeApp }),\n)(App);\n\nlet MainApp = (props) => {\n  return (\n    <HashRouter basename={process.env.PUBLIC_URL}>\n      <Provider store={store}>\n        <AppContainer />\n      </Provider>\n    </HashRouter>\n  )\n}\n\nexport default MainApp;","import './index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport MainApp from './App';\n\nReactDOM.render(\n    <MainApp/>,\n    document.getElementById('root')\n);"],"sourceRoot":""}