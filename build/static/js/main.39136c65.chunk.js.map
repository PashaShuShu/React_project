{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Content/Users/Users.module.css","components/Header/Header.module.css","components/Content/Profile/Info/Info.module.css","components/Content/Profile/MyPosts/MyPosts.module.css","components/Content/Profile/Profile.module.css","components/Content/Profile/MyPosts/Post/Post.module.css","redux/dialog-reducer.js","hoc/withAuthRedirect.js","components/Content/common/Preloader/Preloader.module.css","components/Content/Profile/MyPosts/Forms/MyPostForms.module.css","api/api.js","redux/auth-reduser.js","redux/profile-reducer.js","redux/sidebar-reducer.js","utils/objects=helper.js","redux/users-reducer.js","redux/app-reduser.js","redux/redux-store.js","components/Header/Header.js","components/Header/HeaderContainer.js","components/Footer/Footer.js","components/Navbar/Navbar.js","components/Content/common/Preloader/Preloader.js","components/Content/Profile/Info/StatusButOnHooks.js","components/Content/Profile/Info/StatusContainer.js","components/Content/Profile/Info/Info.js","components/Content/Profile/MyPosts/Post/Post.js","components/Content/common/FormsControls/FormsControls.js","components/Content/Profile/MyPosts/Forms/MyPostForm.js","components/Content/Profile/MyPosts/MyPosts.js","components/Content/Profile/MyPosts/MyPostsContainer.js","components/Content/Profile/Profile.js","components/Content/Profile/ProfileContainer.js","components/Content/Users/UserOnePage.js","components/Content/Users/Paginator.js","components/Content/Users/Users.js","redux/users-selectors.js","components/Content/Users/UsersContainer.js","utils/validators/validators.js","components/Login/LoginForm.js","components/Login/Login.js","components/Login/LoginContainer.js","App.js","index.js"],"names":["module","exports","ADD_MESSAGE","UPDATE_NEW_MESSAGE_TEXT","initialState","newMessageText","dialogsData","id","name","img","messagesData","sentBy","message","addMessage","type","updateNewMessageText","text","newText","dialogReducer","state","action","length","mapStateToPropsForRedirect","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","instance","axios","withCredentials","baseURL","headers","userAPI","currentPage","pageSize","get","then","response","data","userId","delete","post","profileAPI","put","status","loginAPI","login","password","rememberMe","captcha","email","SET_AUTH_USER_DATA","SET_USER_LOGDATA_ERROR","SET_CAPTCHA_URL","error","protection","captchaURL","setAuthUserData","payload","getAuthUserData","dispatch","a","resultCode","getCaptchaURL","url","authReduser","ADD_POST","UPDATE_NEW_POST_TEXT","SET_USER_PROFILE","SET_NEW_STATUS_TEXT","newPostText","profile","postsData","likes_count","setUserProfileSuccess","setNewStatsText","profileReducer","sidebarReducer","updateObjectInArrey","items","itemId","objectPropName","newObjectProps","map","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_USERS_TOTAL_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","toggleIsFetching","toggleIsFollowingProgress","followUnfolowFlow","apiMethod","actionCreator","usersReducer","followed","count","filter","SET_INITIALIZED","initialized","appReduser","reducers","combineReducers","profilePage","dialogsPage","sidebar","usersPage","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Header","className","classes","logo__and__name","src","loginBlock","onClick","logoutUser","HeaderContainer","console","log","Footer","Nav","nav__menu","nav__item","activeClassName","active","Preloader","load","ProfileStatus","useState","editMode","setEditMode","setStatus","useEffect","onDoubleClick","placeholder","onChange","e","currentTarget","value","onMouseLeave","updateStatus","StatusContainer","StatusButOnHooks","Info","info","avatar","photos","large","description","fullName","href","contacts","instagram","github","Post_item","item","like","readOnly","Textarea","input","MyPostForm","max","onSubmit","updatePostText","addPost","validate","errors","render","handleSubmit","meta","touched","MyPosts","postsItem","posts","el","Post","reverse","my__post","Profile","content__head","post__content","ProfileContainer","match","params","authUserId","history","push","getUserProfile","getStatus","withRouter","UserOnePage","unfollow","follow","user","friend","small","disabled","some","PageSpun","p","setCurrentPage","onPageChanged","selectedPage","page","Paginator","pages","Math","abs","pageRangeLimit","Users","friendsList","getUsers","getPageSize","createSelector","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","pageNumber","requestUsersPages","pagesCount","ceil","i","totalCount","requiredField","LoginForm","loginUser","values","submitError","component","Login","LoginContainer","messages","Example","lazy","DialogsContainer","App","initializeApp","path","Suspense","fallback","AppContainer","promise","Promise","all","MainApp","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.39136c65.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav__menu\":\"Navbar_nav__menu__rP-fd\",\"nav__item\":\"Navbar_nav__item__1hPzG\",\"active\":\"Navbar_active__Gp-NF\",\"top__friends\":\"Navbar_top__friends__2ocTC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend\":\"Users_friend__9XYzU\",\"selectedPage\":\"Users_selectedPage__10Veq\",\"page\":\"Users_page__LjuA4\",\"pages\":\"Users_pages__2Y0Ot\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo__and__name\":\"Header_logo__and__name__3bp2L\",\"name\":\"Header_name__2tzP3\",\"loginBlock\":\"Header_loginBlock__2P38k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"info\":\"Info_info__1jhmd\",\"avatar\":\"Info_avatar__1WQKu\",\"description\":\"Info_description__387a9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"my__post\":\"MyPosts_my__post__EswJY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content__head\":\"Profile_content__head__qXFYQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3-ZdD\",\"like\":\"Post_like__2FxAS\"};","const ADD_MESSAGE = 'ADD-MESSAGE'\nconst UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-TEXT';\n\nlet initialState = {\n  newMessageText: \"\",\n  dialogsData: [\n    { id: 1, name: \"Vika\", img: \"https://media.gq.com/photos/55828922e52bc4b477a9714f/master/pass/blogs-the-feed-dick-pic-tumblr-635.jpg\" },\n    { id: 2, name: \"Alex\", img: \"https://i1.sndcdn.com/artworks-000240511894-n0z5cp-t500x500.jpg\" },\n    { id: 3, name: \"Dmitry\", img: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTPTTZe_3l6aDKO88sHV9kA7xxrs5zHYronCxAaDE0PWF5ruKKtBrBkIm-HC7Q_nruuBEE&usqp=CAU\" },\n  ],\n  messagesData: [\n    { id: 1, sentBy: \"r\", message: \"Hollo\" },\n    { id: 2, sentBy: \"l\", message: \"Hallo\" },\n    { id: 3, sentBy: \"l\", message: \"How are you\" },\n    { id: 4, sentBy: \"l\", message: \"Not bad\" },\n    { id: 5, sentBy: \"r\", message: \"Me too\" },\n    { id: 6, sentBy: \"l\", message: \"I have not asked you\" },\n    { id: 7, sentBy: \"l\", message: \"suka\" },\n    { id: 8, sentBy: \"r\", message: \"suka\" },\n    { id: 9, sentBy: \"l\", message: \"Dblia blia bliaima\" },\n    { id: 10, sentBy: \"r\", message: \"you are chiort\" }\n  ]\n}\nconst dialogReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_MESSAGE: {\n      return ({\n        ...state,\n        newMessageText: '',\n        messagesData: [...state.messagesData, {\n          id: state.messagesData.length + 1,\n          sentBy: \"r\",\n          message: state.newMessageText\n        }]\n      });\n    }\n    case UPDATE_NEW_MESSAGE_TEXT:\n      return ({\n        ...state,\n        newMessageText: action.newText\n      })\n    default:\n      return state;\n  }\n}\n\nexport const addMessage = () => ({ type: ADD_MESSAGE })\nexport const updateNewMessageText = (text) =>\n  ({ type: UPDATE_NEW_MESSAGE_TEXT, newText: text })\n\nexport default dialogReducer;","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth,\n})\n\nexport const withAuthRedirect = (Component) => {\n    \n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to='/login' />\n            return <Component {...this.props} />\n        }\n    }\n\n\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect, {})(RedirectComponent)\n\n    return ConnectedAuthRedirectComponent;\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"load\":\"Preloader_load__-0d9G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"MyPostForms_error__1Lagx\"};","import * as axios from 'axios';\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    headers: {\n        \"API-KEY\": '9eb30f89-e9e4-4d8e-ace2-9693fb3d61df'\n    }\n})\n\nexport const userAPI = {\n    getUsers(currentPage, pageSize) {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => { return response.data });\n    },\n\n    unfollow(userId) {\n        return instance.delete(`follow/${userId}`).then(response => { return response.data })\n    },\n    follow(userId) {\n        return instance.post(`follow/${userId}`).then(response => { return response.data })\n    },\n    authMe() {\n        return instance.get(`auth/me`).then(response => { return response.data })\n    },\n}\n\nexport const profileAPI = {\n    getUserProfile(userId) {\n        return instance.get(`profile/${userId}`).then(response => { return response.data })\n    },\n    getUserStatus(userId) {\n        return instance.get('profile/status/' + userId);\n    },\n    putUserStatus(text) {\n        return instance.put(`profile/status`, { status: text });\n    },\n}\n\nexport const loginAPI = {\n    loginUser(login, password, rememberMe, captcha) {\n        debugger\n        if (captcha !== \"\") {\n            return instance.post(`auth/login`,\n                {\n                    email: login,\n                    password: password,\n                    rememberMe: rememberMe,\n                    captcha: captcha\n                }\n            );\n        }\n        return instance.post(`auth/login`,\n            {\n                email: login,\n                password: password,\n                rememberMe: rememberMe,\n            }\n        );\n    },\n    logoutUser() {\n        return instance.delete('auth/login');\n    },\n    getCaptcha() {\n        return instance.get('security/get-captcha-url');\n    },\n}","import { userAPI, loginAPI } from './../api/api';\n\nconst SET_AUTH_USER_DATA = 'SET-AUTH-USET-DATA';\nconst SET_USER_LOGDATA_ERROR = 'SET-USER-LOGDATA-ERROR';\nconst SET_CAPTCHA_URL = 'SET-USER-CAPTCHA-URL';\n\n\nlet initialState = {\n    userId: null,\n    email: null,\n    login: null,\n    isAuth: false,\n    error: null,\n    protection: {\n        captchaURL: \"\",\n\n    }\n}\n\n\nconst authReduser = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_AUTH_USER_DATA:\n            return {\n                ...state,\n                ...action.payload,\n                error: null,\n                captcha: \"\",\n            }\n        case SET_USER_LOGDATA_ERROR:\n            return {\n                ...state,\n                error: action.error,\n                captcha: \"\",\n            }\n        case SET_CAPTCHA_URL:\n            return {\n                ...state,\n                protection: {\n                    ...state.protection,\n                    captchaURL: action.url\n                }\n            }\n        default:\n            return state;\n    }\n}\n\n\nexport const setAuthUserData = (userId, email, login, isAuth) => ({ type: SET_AUTH_USER_DATA, payload: { userId, email, login, isAuth } });\nexport const setUserLogdataError = (text) => ({ type: SET_USER_LOGDATA_ERROR, error: text })\nexport const setCaptchaURL = (url) => ({ type: SET_CAPTCHA_URL, url });\n\n\nexport const getAuthUserData = () => async dispatch => {\n    let response = await userAPI.authMe();\n\n    if (response.resultCode === 0) {\n        let { id, email, login } = response.data;\n        dispatch(setAuthUserData(id, email, login, true));\n    }\n\n}\n\nexport const loginUser = (login, password, rememberMe, captcha) => async dispatch => {\n    let response = await loginAPI.loginUser(login, password, rememberMe, captcha)\n\n    if (response.data.resultCode === 0) {\n        console.log(\"success\");\n        dispatch(getAuthUserData());\n    } else if (response.data.resultCode === 10) {\n        dispatch(getCaptchaURL());\n    } else {\n        let message = response.data.messages.length > 0 ?\n            response.data.messages[0]\n            :\n            \"some error\";\n        dispatch(setUserLogdataError(message))\n    }\n\n\n}\nexport const logoutUser = () => async dispatch => {\n    let response = await loginAPI.logoutUser()\n\n    if (response.data.resultCode === 0) {\n        console.log(\"EXIT\")\n        dispatch(setAuthUserData(null, null, null, false))\n    }\n\n}\nexport const getCaptchaURL = () => async dispatch => {\n    let response = await loginAPI.getCaptcha()\n    \n    let captcha = response.data.url;\n    dispatch(setCaptchaURL(captcha));\n\n}\n\nexport default authReduser;","import { profileAPI } from '../api/api';\n\nconst ADD_POST = 'ADD-POST';\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\nconst SET_USER_PROFILE = 'SET-USER-PROFILE';\nconst SET_NEW_STATUS_TEXT = 'SET-NEW-STATUS-TEXT';\n\nlet initialState = {\n    newPostText: '',\n    profile: null,\n    status: \"\",\n    postsData: [\n        { id: 1, name: \"Pasha\", message: \"boo boo bi bi\", likes_count: 122 },\n        { id: 2, name: \"Pasha\", message: \"ifro frau\", likes_count: 233 },\n        { id: 3, name: \"Pasha\", message: \"isgold de fag\", likes_count: 223 },\n        { id: 4, name: \"Pasha\", message: \"de fag\", likes_count: 2223 }\n    ]\n}\n\nconst profileReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_POST: {\n            return ({\n                ...state,\n                newPostText: \"\",\n                postsData: [...state.postsData, {\n                    id: (state.postsData.length + 1),\n                    name: \"Pasha\",\n                    message: state.newPostText,\n                    likes_count: 0\n                }]\n            });\n        }\n        case UPDATE_NEW_POST_TEXT: {\n            return ({\n                ...state,\n                newPostText: action.newText\n            });\n        }\n        case SET_USER_PROFILE:\n            return {\n                ...state,\n                profile: action.profile,\n            }\n        case SET_NEW_STATUS_TEXT:\n            return {\n                ...state,\n                status: action.text\n            }\n        default:\n            return state;\n    }\n}\n\nexport const addPost = () => ({ type: ADD_POST })\nexport const updatePostText = (text) => ({ type: UPDATE_NEW_POST_TEXT, newText: text })\nexport const setUserProfileSuccess = (profile) => ({ type: SET_USER_PROFILE, profile })\nexport const setNewStatsText = (text) => ({ type: SET_NEW_STATUS_TEXT, text })\n\n\nexport const getUserProfile = (userId = 2) => {\n    return ((dispatch) => {\n\n        profileAPI.getUserProfile(userId).then(data => {\n            dispatch(setUserProfileSuccess(data))\n        });\n\n    })\n}\n\nexport const getStatus = (userId) => (dispatch) => {\n    profileAPI.getUserStatus(userId)\n        .then(response => {\n            dispatch(setNewStatsText(response.data))\n        })\n}\n\nexport const updateStatus = (text) => (dispatch) => {\n    profileAPI.putUserStatus(text)\n        .then(response => {\n            if (response.data.resultCode === 0) {\n                dispatch(setNewStatsText(text))\n            }\n        })\n}\n\n\nexport default profileReducer;","let initialState = {\n\n}\n\n\nconst sidebarReducer = (state = initialState, action) => {\n    switch (action.type){\n        default:\n            return state;\n    }\n}\n\nexport default sidebarReducer","export const updateObjectInArrey = (items, itemId, objectPropName, newObjectProps) => {\r\n    return items.map(u => {\r\n        if (u[objectPropName] === itemId) {\r\n            return { ...u, ...newObjectProps };\r\n        }\r\n        return u\r\n    })\r\n}","import { userAPI } from './../api/api';\nimport { updateObjectInArrey } from './../utils/objects=helper';\n\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET-USERS';\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\nconst SET_USERS_TOTAL_COUNT = 'SETUSER-TOTAL-COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE-IS-FOLLOWING-PROGRESS';\n\nlet initialState = {\n    users: [],\n    pageSize: 10,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: true,\n    followingInProgress: [],\n}\n\nconst usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users: updateObjectInArrey(state.users, action.userId, 'id', { followed: true })\n                /* users: state.users.map(u => {\n                    if (u.id === action.userId) {\n                        return { ...u, followed: true };\n                    }\n                    return u\n                }) */\n            }\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: updateObjectInArrey(state.users, action.userId, 'id', { followed: false })\n            }\n        case SET_USERS:\n            return {\n                ...state,\n                users: [...action.users]\n            }\n        case SET_CURRENT_PAGE:\n            return {\n                ...state,\n                currentPage: action.currentPage\n            }\n        case SET_USERS_TOTAL_COUNT:\n            return {\n                ...state,\n                totalUsersCount: action.count\n            }\n        case TOGGLE_IS_FETCHING:\n            return {\n                ...state,\n                isFetching: action.isFetching\n            }\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\n            return {\n                ...state,\n                followingInProgress: action.isFetching\n                    ? [...state.followingInProgress, action.userId]\n                    : state.followingInProgress.filter(id => id !== action.userId)\n            }\n        default: return state;\n    }\n}\n\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId });\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId });\nexport const setUsers = (users) => ({ type: SET_USERS, users });\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage });\nexport const setUsersTotalCount = (count) => ({ type: SET_USERS_TOTAL_COUNT, count });\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching });\nexport const toggleIsFollowingProgress = (isFetching, userId) => ({ type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId })\n\nconst followUnfolowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\n    dispatch(toggleIsFollowingProgress(true, userId));\n\n    let data = await apiMethod(userId)\n\n    if (data.resultCode === 0) {\n        dispatch(actionCreator(userId));\n    }\n    dispatch(toggleIsFollowingProgress(false, userId));\n}\n\nexport const requestUsersPages = (currentPage, pageSize) => async dispatch => {\n\n    dispatch(toggleIsFetching(true));\n\n    let data = await userAPI.getUsers(currentPage, pageSize);\n\n    dispatch(toggleIsFetching(false));\n    dispatch(setUsers(data.items));\n    dispatch(setUsersTotalCount(data.totalCount));\n\n}\n\nexport const unfollow = (userId) => async dispatch => {\n    followUnfolowFlow(dispatch, userId, userAPI.unfollow, unfollowSuccess)\n}\n\n\nexport const follow = (userId) => async dispatch => {\n    followUnfolowFlow(dispatch, userId, userAPI.follow, followSuccess)\n}\n\n\nexport default usersReducer;","import { getAuthUserData } from './auth-reduser'\r\n\r\nconst SET_INITIALIZED = 'SET_INITIALIZED';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nlet appReduser = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_INITIALIZED:\r\n            \r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default: return { ...state }\r\n    }\r\n};\r\n\r\nexport const setInitializedSuccess = () => ({ type: SET_INITIALIZED })\r\n\r\nexport const initializeApp = () => dispatch => {\r\n    let promise = dispatch(getAuthUserData())\r\n    Promise.all([promise]).then(() => {\r\n        \r\n        dispatch(setInitializedSuccess())\r\n    });\r\n\r\n}\r\n\r\nexport default appReduser;","\nimport { applyMiddleware, compose, combineReducers, createStore } from \"redux\";\nimport authReduser from \"./auth-reduser\";\nimport dialogReducer from './dialog-reducer';\nimport profileReducer from './profile-reducer';\nimport sidebarReducer from './sidebar-reducer';\nimport usersReducer from './users-reducer';\nimport thunkMiddleware from 'redux-thunk';\nimport appReduser from './app-reduser';\n\n\nlet reducers = combineReducers({\n    profilePage: profileReducer,\n    dialogsPage: dialogReducer,\n    sidebar: sidebarReducer,\n    usersPage: usersReducer,\n    auth: authReduser,\n    app: appReduser,\n\n})\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\n\n\nexport default store;","import { NavLink } from 'react-router-dom';\nimport classes from './Header.module.css';\nconst Header = (props) => {\n  return (\n    <header>\n      <div className={classes.logo__and__name}>\n        <img src=\"https://img2.freepng.ru/20180518/jjg/kisspng-moroccan-cuisine-logo-sahara-restaurant-middle-eas-5aff5f15226751.5303971415266854611409.jpg\"></img>\n        <span className={classes.name}>SHARA.NET</span>\n        <NavLink to=\"/hooks\">Hooks</NavLink>\n      </div>\n      <div className={classes.loginBlock}>\n        {props.isAuth ?\n          <div>\n            {props.login}\n            <div>\n              <button onClick={props.logoutUser}>Logout</button>\n            </div>\n          </div>\n          :\n          <NavLink to='/login'>Login</NavLink>\n        }\n\n      </div>\n    </header>\n  );\n}\n\nexport default Header;","import Header from \"./Header\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport { setAuthUserData, logoutUser } from '../../redux/auth-reduser';\n\n\nclass HeaderContainer extends React.Component{\n\n    render(){\n        return(\n            <Header {...this.props}/>\n        )\n    }\n}\n\nconst mapStateToProps = (state)=>({\n    isAuth: state.auth.isAuth,\n    login: state.auth.login,\n})\n\nexport default connect(mapStateToProps,{\n    logoutUser\n})(HeaderContainer);","import classes from './Footer.module.css';\nconst Footer = ()=>{\n  return(\n      <footer>\n        All rights are defended fuck you\n      </footer>\n  );\n}\n\nexport default Footer;","import classes from './Navbar.module.css';\nimport { NavLink } from 'react-router-dom';\n\nconst Nav = (props) => {\n    \n\n    return (\n        <nav>\n            <div className={classes.nav__menu}>\n                <div className={classes.nav__item}>\n                    <NavLink to=\"/profile\" activeClassName={classes.active}>Profile</NavLink>\n                </div>\n                <div className={classes.nav__item}>\n                    <NavLink to=\"/dialogs\" activeClassName={classes.active}>Messages</NavLink>\n                </div>\n                <div className={classes.nav__item}>\n                    <NavLink to=\"/news\" activeClassName={classes.active}>News</NavLink>\n                </div>\n                <div className={classes.nav__item}>\n                    <NavLink to=\"/music\" activeClassName={classes.active}>Music</NavLink>\n                </div><br></br>\n                <div className={classes.nav__item}>\n                    <NavLink to=\"/users\" activeClassName={classes.active}>Users</NavLink>\n                </div><br></br>\n                <div className={classes.nav__item}>\n                    <NavLink to=\"/settings\" activeClassName={classes.active}>Settings</NavLink>\n                </div>\n                \n            </div>\n    \n        </nav>\n    );\n}\n\nexport default Nav;","import classes from './Preloader.module.css';\nimport React from 'react';\n\nconst Preloader = (props) => {\n    return <img\n        className={classes.load}\n        src=\"https://orig04.deviantart.net/4590/f/2017/119/c/e/grooving_cactus__green__by_funymony-db7le16.gif\"\n    ></img>\n}\n\nexport default Preloader","import React, { useState, useEffect } from 'react';\n\n\n\n\nconst ProfileStatus = (props) => {\n\n    const [editMode, setEditMode] = useState(true);\n    const [status, setStatus] = useState(props.status);\n\n    useEffect(() =>{ \n        setStatus(props.status)\n\n    }, [props.status] )\n\n    const activateEditMode = () => {\n        setEditMode(false);\n    }\n    const deactivateEditMode = () => {\n        setEditMode(true);\n        props.updateStatus(status);\n    }\n\n    const onChangeStatusText = (e) => {\n        let text = e.currentTarget.value;\n        setStatus(text);\n    }\n\n    return (\n        <>\n            <div>\n                {editMode ?\n                    <div>\n                        <span onDoubleClick={activateEditMode}>\n                            {props.status || \"I dont have status\"\n                            }\n                        </span>\n                    </div>\n                    :\n                    <div>\n                        <input\n                            placeholder=\"мой статус\"\n                            onChange={onChangeStatusText}\n                            onMouseLeave={deactivateEditMode}\n                            value={status}>\n\n                        </input>\n                    </div>\n                }\n            </div>\n        </>\n    )\n}\n\nexport default ProfileStatus;","import { connect } from 'react-redux';\nimport React from 'react'\nimport StatusButOnHooks from './StatusButOnHooks';\nimport { updateStatus } from './../../../../redux/profile-reducer';\n\nclass StatusContainer extends React.Component {\n    render() {\n        return (\n            <div>\n                <StatusButOnHooks {...this.props} />\n            </div>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => ({\n    status: state.profilePage.status,\n})\n\nexport default connect(mapStateToProps, {\n    updateStatus,\n})(StatusContainer)","import classes from './Info.module.css';\nimport Preloader from './../../common/Preloader/Preloader';\nimport StatusContainer from './StatusContainer';\n\nconst Info = (props) => {\n    if (!props.profile) {\n        return <Preloader />\n    }\n    return (\n        <div className={classes.info}>\n            <div className={classes.avatar}>\n                <img src={(props.profile.photos.large) ? props.profile.photos.large : \"https://img.icons8.com/cotton/2x/fa314a/person-male--v2.png\"}></img>\n            </div>\n            <div className={classes.description}>\n                {props.profile.fullName}\n                <div>\n                    <h3>About me</h3>\n                    <StatusContainer status={props.status} />\n                </div>\n                <div>\n                    <h3>instagram: <a href={props.profile.contacts.instagram}>чекай мой инст</a></h3>\n                    <h3>git: <a href={props.profile.contacts.github}>чекай мой гит</a></h3>\n                </div>\n            </div>\n\n        </div>\n    );\n}\nexport default Info;","import classes from \"./Post.module.css\"\n\nconst Post_item = (props)=>{\n    return(\n        <div className=\"Post\">\n            <div className={classes.item}>\n                <img src=\"https://cs9.pikabu.ru/post_img/big/2018/10/22/10/1540228059127699409.jpg\"></img><br/>\n                <div>\n                    {props.name}\n                </div>\n                <div>\n                    {props.message}\n                </div>\n                <div className={classes.like}>\n                    <span>\n                        <img src=\"https://pngicon.ru/file/uploads/like.png\"></img>\n                    </span> \n                    <input id=\"like\" type='number' value={props.likes_count} readOnly></input>\n                </div>            \n            </div>\n        </div>\n    );\n} \n\nexport default Post_item;","export const Textarea = ({ input, ...props }) => {\n    return (\n        <div>\n            <textarea {...input} {...props} placeholder={props.placeholder} />\n        </div>\n    )\n}\n","import classes from './MyPostForms.module.css'\nimport { Form, Field } from 'react-final-form'\nimport { Textarea } from '../../../common/FormsControls/FormsControls';\n\nconst MyPostForm = (props) => {\n    const validate = (max) => (e) => {\n        const errors = {}\n        if (!e.post) {\n            errors.post = \"Do you want to make a post?\";\n        } else if (e.post.length > max) {\n            errors.post = \"to long\";\n        }\n        return errors;\n    }\n    \n    const onSubmit = (e) => {\n        debugger\n        props.updatePostText(e.post)\n        props.addPost();\n    }\n\n    return (\n        <Form\n            onSubmit={onSubmit}\n            validate={validate(100)}\n            \n            render={({ handleSubmit }) => (\n                <form onSubmit={handleSubmit}>\n                    <lable>Make a post</lable>\n                    <Field name=\"post\">\n                        {({ input, meta }) => (\n                            <div>\n                                <Textarea {...input} placeholder=\"some post text\" />\n                                {meta.touched && meta.error &&\n                                    <span className={classes.error}>{meta.error}</span>\n                                }\n                            </div>\n                        )}\n                    </Field>\n                    <button type=\"submit\">Post</button>\n                </form>\n            )}\n        />\n    )\n}\n\nexport default MyPostForm;","import classes from \"./MyPosts.module.css\"\nimport Post_item from './Post/Post'\nimport React from 'react'\nimport MyPostForm from './Forms/MyPostForm'\n\nconst MyPosts = (props) => {\n    \n    let postsItem = props.posts.map(el => {\n        return <Post_item name={el.name} key={el.id} message={el.message} likes_count={el.likes_count} />\n    })\n    postsItem.reverse();\n\n    return (\n        <div className=\"Post\">\n            <div className={classes.post}>\n                <div className={classes.my__post}>\n                    <MyPostForm addPost={props.addPost} updatePostText={props.updatePostText} />\n                </div>\n                <div className={classes.posts}>\n                    {postsItem}\n                </div>\n            </div>\n        </div>\n    );\n}\n\n\n\nexport default MyPosts;","import { addPost, updatePostText } from '../../../../redux/profile-reducer'\nimport MyPosts from './MyPosts'\nimport { connect } from 'react-redux'\nimport React, { useEffect } from 'react'\n\nconst MyPostsContainer = (props) => {\n    console.log(\"rerender\")\n    return (\n        <MyPosts {...props} />\n    )\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.postsData,\n        newPostText: state.profilePage.newPostText\n    }\n};\n\nexport default connect(mapStateToProps, {\n    updatePostText,\n    addPost\n})(MyPostsContainer);","import classes from './Profile.module.css';\nimport Info from './Info/Info'\nimport MyPostContainer from './MyPosts/MyPostsContainer';\n\nconst Profile = (props) => {\n    return (\n        <div className=\"Content\">\n            <div className={classes.content__head}>\n                <img src=\"https://i.gifer.com/1Zla.gif\"></img>\n            </div>\n            <div className={classes.post__content}>\n                <Info profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\n                <h3>My posts</h3>\n                <MyPostContainer />\n            </div>\n        </div>\n    );\n}\n\nexport default Profile;","import Profile from './Profile';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { getUserProfile, getStatus, updateStatus } from './../../../redux/profile-reducer';\nimport { withRouter } from 'react-router-dom';\nimport { withAuthRedirect } from './../../../hoc/withAuthRedirect';\nimport { compose } from 'redux';\n\nclass ProfileContainer extends React.Component {\n\n    componentDidMount() {\n        let userId = this.props.match.params.userId;\n\n        if (!userId) {\n\n            userId = this.props.authUserId;\n\n            if (!userId) this.props.history.push(\"/login\");\n\n        }\n        \n        this.props.getUserProfile(userId);\n        this.props.getStatus(userId)\n    }\n\n    render() {\n\n        return (\n            <Profile {...this.props} status={this.props.status} />\n        );\n    }\n}\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    authUserId: state.auth.userId,\n    status: state.profilePage.status\n})\n\nexport default compose(\n    connect(mapStateToProps, { getUserProfile, getStatus }),\n    withRouter,\n    withAuthRedirect,\n\n)(ProfileContainer)","import classes from './Users.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst UserOnePage = ({users, followingInProgress, unfollow, follow}) => {\r\n    return (<>\r\n        {\r\n            users.map((user) => {\r\n                return (\r\n                    <div key={user.id} className={classes.friend}>\r\n                        <NavLink to={\"/profile/\" + user.id}><img src={\r\n                            user.photos.small != null ? user.photos.small : \"https://w7.pngwing.com/pngs/81/570/png-transparent-profile-logo-computer-icons-user-user-blue-heroes-logo-thumbnail.png\"}></img>\r\n                        </NavLink>\r\n                        <div>{user.name}</div>\r\n                        <div>{user.status}</div>\r\n                        {(user.followed)\r\n                            ? <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n\r\n                                unfollow(user.id);\r\n\r\n                            }}>unfollow</button>\r\n                            : <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n\r\n                                follow(user.id);\r\n\r\n                            }}>follow</button>}\r\n                    </div>)\r\n            })\r\n        }\r\n    </>);\r\n}\r\nexport default UserOnePage;","import React from 'react';\nimport classes from './Users.module.css';\n\nconst PageSpun = ({ currentPage, p, setCurrentPage, onPageChanged }) => {\n    return (\n        <span\n            className={\n                currentPage === p ? classes.selectedPage : classes.page\n            }\n            onClick={\n                currentPage !== p ?\n                    () => {\n                        setCurrentPage(p)\n                        onPageChanged(p)\n                    } \n                    :\n                    null\n            }\n        > {p} </span>\n    )\n}\n\nconst Paginator = (props) => {\n\n    const pageRangeLimit = 5;\n    return (\n        <div className={classes.pages}>\n            <div>\n                {props.pages.map(p => {\n                    if (p === 1 || Math.abs(props.currentPage - p) < pageRangeLimit || p === props.pages.length) {\n                        return (\n                            <PageSpun p={p}\n                                currentPage={props.currentPage}\n                                setCurrentPage={props.setCurrentPage}\n                                onPageChanged={props.onPageChanged} />\n                        )\n                    } else if (Math.abs(props.currentPage - p) < pageRangeLimit+1) {\n                        return '...'\n                    }\n\n                }\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default Paginator;","import React from 'react';\nimport classes from './Users.module.css';\nimport UserOnePage from './UserOnePage';\nimport Paginator from './Paginator';\n\nlet Users = (props) => {\n    return (\n        <div className={classes.friendsList}>\n            <UserOnePage\n                users={props.users}\n                followingInProgress={props.followingInProgress}\n                unfollow={props.unfollow}\n                follow={props.follow}\n            />\n            <Paginator\n                setCurrentPage={props.setCurrentPage}\n                currentPage={props.currentPage}\n                onPageChanged={props.onPageChanged}\n                pages={props.pages} />\n\n        </div>\n    );\n}\n\nexport default Users;","import { createSelector } from 'reselect'\r\n\r\nexport const getUsers = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsersSuperSelector = createSelector(getUsers, (users) => {\r\n    return users.filter(user => true);\r\n})\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}\r\n","import { connect } from 'react-redux';\nimport { follow, unfollow, requestUsersPages, setCurrentPage } from \"../../../redux/users-reducer\";\nimport Users from './Users';\nimport React from 'react';\nimport Preloader from './../common/Preloader/Preloader';\nimport {getUsersSuperSelector, getUsers, getPageSize, getTotalUsersCount, getCurrentPage, getIsFetching, getFollowingInProgress } from \"../../../redux/users-selectors\"\n\nclass UsersContainer extends React.Component {\n\n    componentDidMount() {\n        this.props.requestUsersPages(this.props.currentPage, this.props.pageSize);\n    }\n\n    onPageChanged = (pageNumber) => {\n        this.props.requestUsersPages(pageNumber, this.props.pageSize);\n    }\n\n    render() {\n\n        let pagesCount = Math.ceil(this.props.totalUsersCount / this.props.pageSize);\n\n        let pages = [];\n\n        for (let i = 1; i <= pagesCount; i++) {\n            pages.push(i)\n        }\n\n        return <>\n            {this.props.isFetching\n                ? <Preloader />\n                : <Users\n                    pages={pages}\n                    pageSize={this.props.pageSize}\n                    totalUsersCount={this.props.totalUsersCount}\n                    users={this.props.users}\n                    unfollow={this.props.unfollow}\n                    follow={this.props.follow}\n                    onPageChanged={this.onPageChanged}\n                    followingInProgress={this.props.followingInProgress}\n                    toggleIsFollowingProgress={this.props.toggleIsFollowingProgress}\n                    currentPage={this.props.currentPage}\n                    setCurrentPage={this.props.setCurrentPage}\n                />}\n\n        </>\n    }\n}\n\n\nlet mapStateToProps = (state) => {\n    return {\n        users: getUsers(state),\n        pageSize: getPageSize(state),\n        totalUsersCount: getTotalUsersCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getIsFetching(state),\n        followingInProgress: getFollowingInProgress(state),\n    }\n}\n\nexport default connect(mapStateToProps, {\n    follow,\n    unfollow,\n    setCurrentPage, \n    requestUsersPages\n})(UsersContainer);\n","export const requiredField = value => {\n    const errors = {}\n\n    if (!value.login) {\n        errors.login = \"how about login?\";\n    }\n    if (!value.password) {\n        errors.password = \"how about password?\";\n    }\n\n    return errors;\n}\n","import { Form, Field } from \"react-final-form\"\nimport { requiredField } from './../../utils/validators/validators';\n\n\nconst LoginForm = ({ loginUser, error, captchaURL }) => {\n    const onSubmit = async values => {\n        loginUser(values.login, values.password, values.rememberMe, values.captcha)\n        if (error) {\n            return { login: error }\n        }\n    }\n    return (\n        <Form\n            onSubmit={onSubmit}\n            validate={requiredField}\n            render={({ handleSubmit }) => (\n                <form onSubmit={handleSubmit}>\n\n                    <Field name=\"login\">\n                        {({ input, meta }) => (\n                            <div>\n                                <input {...input} type=\"text\" placeholder=\"login\" />\n                                {(meta.error || meta.submitError) && meta.touched && <span>{meta.error || meta.submitError}</span>}\n                            </div>\n                        )}\n                    </Field>\n\n                    <Field name=\"password\">\n                        {({ input, meta }) => (\n                            <div>\n                                <input {...input} type=\"password\" placeholder=\"Password\" />\n                                {meta.error && meta.touched && <span>{meta.error}</span>}\n                            </div>\n                        )}\n                    </Field>\n                    {captchaURL ?\n                        <div>\n                            <img src={captchaURL}></img>\n                            <div>\n                                <Field name=\"captcha\" type=\"text\" component=\"input\" />\n                            </div>\n                        </div>\n                        : null\n                    }\n                    <div>\n                        <Field name=\"rememberMe\" component=\"input\" type=\"checkbox\" />\n                        <supn>remember me</supn>\n                    </div>\n                    <button type=\"submit\"> log in </button>\n                </form>\n            )\n            } />\n    )\n}\n\nexport default LoginForm;","import LoginForm from \"./LoginForm\";\nimport { Redirect } from 'react-router-dom';\n\nconst Login = (props) => {\n    if (props.isAuth) {\n        return <Redirect to={\"/profile\"} />\n    }\n\n    return (\n        <div>\n            <h1>Login</h1>\n            <LoginForm\n                captchaURL={props.captchaURL}\n                error={props.error}\n                loginUser={props.loginUser}\n            />\n        </div>\n    )\n}\n\nexport default Login;","import React from \"react\";\nimport { loginUser,} from \"../../redux/auth-reduser\";\nimport { connect } from \"react-redux\";\nimport Login from './Login';\n\nclass LoginContainer extends React.Component {\n    render() {\n        return (\n            <>\n                <Login\n                    captchaURL={this.props.captchaURL}\n                    error={this.props.error}\n                    isAuth={this.props.isAuth}\n                    loginUser={this.props.loginUser} />\n            </>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        isAuth: state.auth.isAuth,\n        error: state.auth.error,\n        captchaURL: state.auth.protection.captchaURL,\n    }\n};\n\nexport default connect(mapStateToProps, {\n    loginUser,\n   \n})(LoginContainer);","import './App.css';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Footer from './components/Footer/Footer';\nimport Nav from './components/Navbar/Navbar';\nimport ProfileContainer from './components/Content/Profile/ProfileContainer';\nimport UsersContainer from './components/Content/Users/UsersContainer';\nimport { Route, withRouter, BrowserRouter } from 'react-router-dom';\nimport LoginContainer from './components/Login/LoginContainer';\nimport { connect, Provider } from 'react-redux';\nimport React from 'react';\nimport { compose } from 'redux';\nimport { initializeApp } from './redux/app-reduser';\nimport Preloader from './components/Content/common/Preloader/Preloader';\nimport store from './redux/redux-store';\n\n//! laz components\nconst Example = React.lazy(() => import('./components/Content/Hooks/Example'));\nconst DialogsContainer = React.lazy(() => import('./components/Content/Dialogs/DialogsContainer'));\n\n\nclass App extends React.Component {\n  componentDidMount() {\n\n    this.props.initializeApp();\n\n  }\n\n  render() {\n\n    if (!this.props.initialized) {\n      return <Preloader />\n    }\n    return (\n      <div className=\"app__wrapper\">\n        <div className=\"app__wrapper__header\">\n          <HeaderContainer />\n        </div>\n        <div className=\"app__wrapper__nav\">\n          <Nav />\n        </div>\n        <div className=\"app__wrapper__content\">\n          <Route path='/profile/:userId?' render={() => <ProfileContainer />} />\n          <Route path='/dialogs' render={() => {\n            return (\n              <React.Suspense fallback={<div>Loading...</div>}>\n                <DialogsContainer />\n              </React.Suspense>\n            )\n          }} />\n          <Route path='/users' render={() => <UsersContainer />} />\n          <Route path='/login' render={() => <LoginContainer />} />\n          <Route path='/hooks' render={() => {\n            return (\n              <React.Suspense fallback={<div>Loading...</div>}>\n                <Example />\n              </React.Suspense>\n            )\n          }} />\n        </div>\n        <div className=\"app__wrapper__footer\">\n          <Footer />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    initialized: state.app.initialized\n  }\n}\n\n\nlet AppContainer = compose(\n  withRouter,\n  connect(mapStateToProps, { initializeApp }),\n)(App);\n\nlet MainApp = (props) => {\n  return (\n    <BrowserRouter>\n      <Provider store={store}>\n        <AppContainer />\n      </Provider>\n    </BrowserRouter>\n  )\n}\n\nexport default MainApp;","import './index.css';\nimport store from './redux/redux-store';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport MainApp from './App';\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n    <MainApp/>,\n    document.getElementById('root')\n);"],"sourceRoot":""}